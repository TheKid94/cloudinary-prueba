<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Photo Gallery</title>
    {{!-- BootStrap --}}
    <link rel="stylesheet" href="https://bootswatch.com/4/materia/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
</head>
<body>
    <table id="idTableFile">
        <caption>Table includes input fields in each row</caption>
        <thead>
            <tr>
                <th id="r1c2" scope="col">Archivos</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input type="file" id="file1"/></td>
            </tr>
            <tr>
                <td><input type="file" id="file2"/></td>
            </tr>
            <tr>
                <td><input type="file" id="file3"/></td>
            </tr>
        </tbody>
    </table>
    <input id="cargarFiles" type="button" onclick="cargarDoc()" value="cargar" />
    {{!-- {{> navigation}}

    <div class="container p-4">
        {{{body}}}
    </div> --}}

    <script>
        async function cargarDoc(){
            var tableF = document.getElementById('idTableFile');
            var row = tableF.rows.length;
            var newUrl = [];
            for(i=1; i< row;i++){
                var file = document.getElementById(`file${i}`).files[0];
                await getBase64(file).then(
                    data => {
                        $.ajax({
                            url: 'http://localhost:5200/images/files',
                            contentType:'application/json; charset=utf-8',
                            type: "POST",
                            data: JSON.stringify({ file: data }),
                            dataType: 'json',
                            success: (res) =>{
                                console.log(res);
                            }
                        })
                    }
                );
            }
            
        }

        function getBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => resolve(reader.result);
                reader.onerror = error => reject(error);
            });
        }
    </script>
</body>
</html>